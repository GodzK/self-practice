console.log(Array.isArray({})); // false
console.log(Array.isArray(new Array(2)));// true
console.log(Array.isArray("{}")); //false
console.log(Array.isArray([])); // true
console.log(Array.isArray(false)); // false


const arr1  = [1,2,3]
const arr2 = [4,5,6]

//concat
console.log([...arr1,...arr2]);
console.log(arr1.concat(arr2));

//toString
console.log(arr1.toString());
console.log(arr1.join(",")); // can add separator


// export default function hello(params) {
    
// }

console.log("Mango".includes("o"));
console.log(arr1.includes(1));


const numbers = [40, 100, 1, 5, 25, 10];
numbers.sort((a, b) => a - b);
console.log(numbers); 

(a, b) => b - a

// ‡πÄ‡∏õ‡πá‡∏ô callback function ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏´‡πâ sort() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö

// ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:

// ‡∏ñ‡πâ‡∏≤ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà return < 0 ‚Üí a ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô b

// ‡∏ñ‡πâ‡∏≤ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà return > 0 ‚Üí b ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô a

// ‡∏ñ‡πâ‡∏≤ return = 0 ‚Üí ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

// üëâ b - a ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á:

// ‡∏ñ‡πâ‡∏≤ b ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ a ‚Üí ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤‡∏ö‡∏ß‡∏Å ‚Üí b ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô a

// ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏∑‡∏≠ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏Å ‚Üí ‡∏ô‡πâ‡∏≠‡∏¢ (Descending order)